#################################################################################
#  FILE:
#	Makefile.win
#
#  DESCRIPTION:
#	RunSwig を実行するための Makefile.
#	次のターゲットを順に make する.
#	(1) InstallSwig		必要に応じて swig のバイナリを make する.
#	(2) ClosedSrcCtl	必要に応じて SprUseClosedSrcOrNot.h を生成する.
#	(3) $(SCILABSTUBHDR)	ScilabStub.hpp を生成する.
#	(4) $(FWOLDSPRSTUB)	FWOldSpringheadStub.cpp を生成する.
#	(5) RunSwig		各プロジェクトの stub.cpp を swig で生成する.
#
#	Visual Studio の設定
#
#	[プロパティ]-[構成プロパティ]-[NMake] のコマンドラインに設定するコマンド
#	とビルドメニューとの関係は, 次のようになっている.
#	　　ビルド　　⇒　ビルドコマンドライン
#	　　リビルド　⇒　クリーンコマンドライン → すべてリビルドコマンドライン
#	　　クリーン　⇒　クリーンコマンドライン
#
#	よって, 次のような設定により機能を実現する.
#	(各ディレクトリについて)
#	　　(コマンドラインによって）
#		ビルド時　　⇒　Makefile がなければ作成 → make の実行
#		リビルド時　⇒　Makefile を強制再作成 → make の実行
#		クリーン時　⇒　Makefile を削除
#	　　(Makefile.swig によって)
#		RunSwig が実行されると判定された時　⇒　Makefile を強制再作成
#		(ただし一時ファイルに作成しておき make 終了後に rename する)
#
#	この Makefile からは $(SCRIPT) を呼び出すだけ.
#	Makefile 作成/削除の制御は, make_manager.bat スクリプトで集中管理する.
#
#	プロパティのコマンドラインに実際に設定するコマンドは次のとおり.
#
#	ビルドコマンドライン：	 make_manager.bat -A -c && nmake -f Makefile
#	すべてリビルドコマンドライン：
#				 make_manager.bat -A -d -c && nmake -f Makefile
#	クリーンコマンドライン： make_manager.bat -A -d
#
#################################################################################
#  Version:
#     Ver 1.00  2012/10/15 F.Kanehori
#     Ver 2.00  2013/01/10 F.Kanehori  前処理を追加
#     Ver 3.00  2017/04/19 F.Kanehori  バッチスクリプトから Python に移行.
#     Ver 4.00  2017/07/31 F.Kanehori  Python adapter の導入
#     Ver 4.01  2019/01/08 F.Kanehori  CheckClosedSrc の導入
#     Ver 4.02  2019/04/03 F.Kanehori  オプション SPRSRCDIR の導入
#     Ver 4.03  2020/04/20 F.Kanehori  python_adapter を do_python に変更
#     Ver 4.04  2019/05/21 F.Kanehori  swig の自動生成化.
#     Ver 4.05  2020/12/14 F.Kanehori  setup 導入テスト開始.
#################################################################################

#  srcディレクトリの設定
#	引数 SPRSRCDIR が設定されていたらそこを src ディレクトリとする
#	さもなければ .../core/src/RunSwig から起動されたと仮定する
#
!ifndef SPRSRCDIR
SPRSRCDIR	= ..
!endif

#  Python がパスに入っていること
#
PYTHON		= python

#  ディレクトリの定義
#
INCDIR		= $(SPRSRCDIR)\..\include
FOUNDATION	= $(SPRSRCDIR)\Foundation
FRAMEWORK	= $(SPRSRCDIR)\Framework
SCILAB		= $(INCDIR)\Scilab

#  使用するスクリプト
#
SCILABSWIG	= ScilabSwig.py
RUNSWIGFW	= RunSwigFramework.py
SCRIPT		= do_swigall.py
CHECKCLOSEDSRC	= CheckClosedSrc.py

#  前処理で作成するファイル
#
SCILABSTUBHDR	= $(SCILAB)\ScilabStub.hpp
FWOLDSPRSTUB	= $(FRAMEWORK)\FWOldSpringheadStub.cpp

all:	PreWork RunSwig

PreWork:	ClosedSrcCtl $(SCILABSTUBHDR) $(FWOLDSPRSTUB)

ClosedSrcCtl:
		@echo Makefile.win: ClosedSrcCtl
		$(PYTHON) $(CHECKCLOSEDSRC)

$(SCILABSTUBHDR):
		@echo Makefile.win: SCILABSTUBHDR (SciLab/ScilabStub.hpp)
		cd $(FOUNDATION) && $(PYTHON) $(SCILABSWIG)

$(FWOLDSPRSTUB):
		@echo Makefile.win: FWOLDSPRSTUB (Framework/FWOldSpringStub.cpp)
		cd $(FRAMEWORK) && $(PYTHON) $(RUNSWIGFW)

RunSwig:
		@echo Makefile.win: RunSwig (do_swigall)
		$(PYTHON) $(SCRIPT)

