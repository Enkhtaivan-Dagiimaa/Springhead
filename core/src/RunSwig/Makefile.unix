#################################################################################
#  SYNOPSIS:
#	make -f Makefile.unix
#
#  DESCRIPTION:
#	"src/RunSwig" で cmake によって生成される Makefile 中で make される.
#	各プロジェクトに Stub ファイルを生成するための makefile.
#
#	次のターゲットを順に make する.
#	(1) MakeSwig		必要に応じて拡張版 swig を生成する.
#	(2) ClosedSrcCtl	必要に応じて SprUseClosedSrcOrNot.h を生成する.
#	(3) $(SCILABSTUBHDR)	ScilabStub.hpp を生成する.
#	(4) $(FWOLDSPRSTUB)	FWOldSpringheadStub.cpp を生成する.
#	(5) RunSwig		do_swigall.py を実行することで, 各プロジェクト
#				について
#				(a) interface file "<proj>.i" を生成
#				(b) make file "<proj>Stub.makefile" を生成
#				(c) make "<proj>Stub.makefile" を実行
#				することで, "<proj>Stub.cpp" を生成する.
#
#	この makefile を起動するディレクトリは,
#	  ・環境変数 "_SPRTOP_" で <Springhead> 指定すれば任意
#	  ・さもなければ, <Springhead>/core/src/RunSwig
#	とする. ただし <Sprighead> は clone したトップディレクトリである.
#
#################################################################################
#  Version:
#     Ver 1.0	 2017/04/20 F.Kanehori  Windows 版を unix 用に修正
#     Ver 1.1	 2017/08/23 F.Kanehori  Springhead tree 再構成に対応.
#     Ver 1.2	 2017/10/05 F.Kanehori  オプション PYTHON を子 make に渡す.
#     Ver 1.3	 2019/01/08 F.Kanehori  CheckClosedSrc の導入
#     Ver 1.4	 2019/05/18 F.Kanehori  swig の自動生成化.
#     Ver 1.5	 2020/12/16 F.Kanehori	setup 導入テスト開始.
#     Ver 1.6	 2021/04/08 F.Kanehori	コメント等修正.
#     Ver 1.7	 2021/08/30 F.Kanehori	ダミーファイル削除の廃止.
#################################################################################

ifeq ($(_SPRTOP_),)
SPRSRCDIR	= ..
else
SPRSRCDIR	= $(_SPRTOP_)/core/src
endif

#  Python がパスに入っていること
#
PYTHON		= python

#  ディレクトリの定義
#
INCDIR		= $(SPRSRCDIR)/../include
RUNSWIG		= $(SPRSRCDIR)/RunSwig
FOUNDATION	= $(SPRSRCDIR)/Foundation
FRAMEWORK	= $(SPRSRCDIR)/Framework
SCILAB		= $(INCDIR)/Scilab

SWIGMAKEDIR	= $(SPRSRCDIR)/../bin/src/swig
SWIGINSTALLDIR	= $(SPRSRCDIR)/../bin/swig
SWIGMAKEFILE	= Makefile
SWIGFILENAME	= swig
SWIGBINARY	= $(SWIGINSTALLDIR)/$(SWIGFILENAME)

#  使用するスクリプト
#
SCILABSWIG	= ScilabSwig.py
RUNSWIGFW	= RunSwigFramework.py
SCRIPT		= do_swigall.py
CHECKCLOSEDSRC	= CheckClosedSrc.py
BUILDSWIG	= ./buildswig.sh

#  Prework で作成するファイル
#
SCILABSTUBHDR	= $(INCDIR)/ScilabStub.hpp
FWOLDSPRSTUB	= $(FRAMEWORK)/FWOldSpringheadStub.cpp

#  swig のバイナリが存在するならば swig の make は不要
#
FILEEXISTS	= $(shell ls ${SWIGINSTALLDIR}) | grep $(SWIGFILENAME))
ifeq ($(FILEEXISTS),$(SWIGFILENAME))
	MAKESWIG	= DontMakeSwig
else
	MAKESWIG	= InstallSwig
endif

#  ターゲット
#
all:	PreWork RunSwig

PreWork:	$(MAKESWIG) ClosedSrcCtl $(SCILABSTUBHDR) $(FWOLDSPRSTUB)

InstallSwig:	MakeSwig $(SWIGBINARY)

DontMakeSwig:	
		@echo "Makefile.unix: $(SWIGBAINARY) found"

MakeSwig:	
		cd $(SWIGMAKEDIR) && $(BUILDSWIG)

$(SWIGBINARY):	$(SWIGMAKEDIR)/Source/eswig
		@echo copying swig binary
		cp $(SWIGMAKEDIR)/swig $(SWIGINSTALLDIR)

$(SWIGMAKEDIR)/Source/eswig:

ClosedSrcCtl:
		@echo Makefile.unix: ClosedSrcCtl
		$(PYTHON) $(CHECKCLOSEDSRC)

$(SCILABSTUBHDR):	
		@echo Makefile.unix: SCILABSTUBHDR [SciLab/ScilabStub.hpp]
		cd $(FOUNDATION) && $(PYTHON) $(SCILABSWIG)

$(FWOLDSPRSTUB):	
		@echo Makefile.unix: FWOLDSPRSTUB [Framework/FWOldSpringStub.cpp]
		cd $(RUNSWIG) && $(PYTHON) $(RUNSWIGFW)

RunSwig:	
		@echo Makefile.unix: RunSwig [do_swigall]
		cd $(RUNSWIG) && $(PYTHON) $(SCRIPT)

